
Задание:
Произведите установку Netdata agent на ваш удаленный сервер с доступом к Netdata извне.
Настройте ваш сервер:
в режиме round-robin;
на снятие метрик раз в 2 секунды;
на хранение метрик в течение 1 часа.
Установите PostgreSQL 11 и настройте мониторинг указанной базы данных с помощью TCP-соединения.
В качестве ответа предоставьте конфигурационный файл Netdata и адрес для подключения к Netdata.


************************************************************************************************
Решение
************************************************************************************************

Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
10.08.2022 17:24
1. Установка
address: 84.252.140.89
wget -O /tmp/netdata-kickstart.sh https://my-netdata.io/kickstart.sh && sh /tmp/netdata-kickstart.sh
https://learn.netdata.cloud/docs/get-started

http://84.252.140.89:19999

2. Настройте ваш сервер
# memory deduplication
# KSM on cpu

echo 1 >/sys/kernel/mm/ksm/run
echo 1000 >/sys/kernel/mm/ksm/sleep_millisecs

vi /etc/netdata.conf
******************
[global]
    run as user = netdata

    # default storage size - increase for longer data retention
    page cache size = 32
    dbengine multihost disk space = 256
    mode = save
    update every = 2
    memory deduplication = yes
    history = 3600

*********************

3. Установка Postgres-11
curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc|sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list
sudo apt update
sudo apt -y install postgresql-11
 
apt install python3-pip
sudo apt install python3-dev libpq-dev
pip3 install psycopg2
cd /etc/netdata
sudo ./edit-config python.d/postgres.conf
( настраивал отсюда https://learn.netdata.cloud/docs/agent/collectors/python.d.plugin/postgres )


4. В качестве ответа предоставьте конфигурационный файл Netdata и адрес для подключения к Netdata.
root@epduhck0uhqahu5as7t8:/etc/netdata# cat netdata.conf | grep -v '#'

[global]
    run as user = netdata

    page cache size = 32
    dbengine multihost disk space = 256
    mode = save
    update every = 2
    memory deduplication = yes
    history = 3600
root@epduhck0uhqahu5as7t8:/etc/netdata# 

# Postgres
root@epduhck0uhqahu5as7t8:/etc/netdata/python.d# cat postgres.conf | grep -v '#'
socket:
    name     : 'local'
    user     : 'postgres'
    database : 'postgres'

tcp:
    name     : 'local'
    database : 'postgres'
    user     : 'postgres'
    password : 'postgres'
    host     : 'localhost'
    port     : 5432

tcpipv4:
    name     : 'local'
    database : 'postgres'
    user     : 'postgres'
    password : 'postgres'
    host     : '127.0.0.1'
    port     : 5432

tcpipv6:
    name     : 'local'
    database : 'postgres'
    user     : 'postgres'
    password : 'postgres'
    host     : '::1'
    port     : 5432

sudo ./edit-config go.d.conf
./edit-config go.d/postgres.conf
systemctl restart netdata


root@epduhck0uhqahu5as7t8:/etc/netdata# cat  go.d.conf | grep -v '#'
**************
enabled: yes
default_run: yes
max_procs: 0
modules:
  postgres: yes
****************


http://84.252.140.89:19999/

Траблшутинг
cd /usr/libexec/netdata/plugins.d/
./python.d.plugin postgres debug trace

Помогла мне понять что проблема была с доступом к базе по паролю.
ОТВЕТ КУРАТОРА
Алексей Кузнецов (@Hystrix)
ВЫПОЛНЕНО 5
11.08.2022 11:31
Добрый день!

Отличные знание темы и выполнение задания, замечаний и вопросов нет!


*******************************************************************
Теория
*******************************************************************

LNXA-05 01: Monitoring. Netdata
Описание:
Начиная с этого задания, мы познакомимся с вами с рядом инструментов, которые позволят узнавать о состоянии системы не по крикам ваших коллег и гаданию на кофейной гуще, а по ощутимым метрикам и проверкам, осуществляемым в автоматическом режиме. Начнем мы с простых вариантов, пригодных для контроля единственного сервера, а далее пройдем к все более и более современным, расширяемым в вопросах функциональности и удобым инструментам.

На сегодняшний день у инженеров есть масса возможностей в части организации мониторинга вверенной им инфраструктуры. Ряд сервисов предоставляет Open Source решения, которые в части обслуживания ложатся полностью на ваши плечи; ряд сервисов развивает модель предоставления мониторинга как услуги — вы просто ставите агента, и в удобном (или не очень) веб-интерфейсе настраиваете алерты (срабатывания на изменения состояния системы из стабильного).

Инструмент Netdata, с которым мы познакомимся в рамках этого задания, ориентирован на сбор и визуализацию показателей системы в реальном времени, плюс, помимо этого, Netdata крайне легко и быстро устанавливается, почти не потребляет ресурсы, а также легко конфигурируется.

С помощью Netdata сразу после установки (которая возможна одной командой) вы сможете получить огромное количество информации, такие как нагрузка на CPU, использование RAM, состояние файловых систем и очень глубокие данные аналитики по использованию сети (собственно, именно этот аспект очень часто позволяет диагностировать «неуловимую» сетевую проблему, за что инструмент крайне любим многими администраторами). Прибавьте к этому то, что данная система сама по себе вносит минимальный оверхед (порядка 1% утилизации одного ядра, несколько мегабайт памяти), и вы получите прекрасный и довольно гибкий инструмент, который многими используется как решение для выявления и диагностики проблем в реальном времени, на конкретном сервере.

Про «конкретный сервер» — не просто оговорка. Особенностью Netdata является то, что она представляет собой конечный коробочный продукт, который организует сбор, хранение и визуализацию метрик с помощью GUI на вашем сервере. Нет никакой централизованной системы и связанных с этим проблем горизонтального масштабирования, но также нет и анализа метрик сразу с нескольких серверов (ну скажем, SELECT с вашей кластеризованной базы данных). С помощью https://app.netdata.cloud можно авторизироваться, привязать все сервера для более удобного доступа и получить больше возможностей, однако этот вариант подходит не для всех случаев (к примеру, если у вас есть опасения с точки зрения безопасности такого подхода).

Однако Netdata, благодаря гибкой конфигурации, можно настроить на хранение метрик в различные базы данных (как NoSQL базы данных или базы данных временных рядов) в качестве хранилища данных Netdata. Есть плагины, написанные на Python, для сбора и визуализации метрик с огромного количества продуктов, в том числе баз данных, Inmemory-хранилищ, сервисов очередей сообщений, сбора и хранения логов, визуализации и прочие радости жизни. Это в сумме превращает Netdata в комплексный инструмент мониторинга, позволяющий контролировать и получать информацию обо всем, что происходит на вашем сервере.

Конфигурация Netdata делится на 2 части:

Главный файл — /etc/netdata/netdata.conf, определяет глобальные параметры работы.
Файлы, связанные с конкретными проверками, — для конфигурации этих параметров используется скрипт /etc/netdata/edit-config. Он создает из шаблона файл, который будет перезаписывать конфигурацию конкретной проверки либо позволит создать новую.
В рамках задания мы познакомимся с этим инструментом на базовом уровне, но на этом наше знакомство не закончится — в следующем задании мы еще рассмотрим, как построить централизованный мониторинг в связке с другим решением.

Полезные ссылки:
Netdata agent-docs
Что такое базы данных временных рядов (time series database)
Netdata: мониторинг в реальном времени (habr)
Change how long Netdata stores metrics
