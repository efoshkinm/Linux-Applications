Задание:
Задание рекомендуется выполнять на чистой VM.
Сконфигурируйте Redis на RDB метод бэкапа, с тем, чтобы он сохранял дамп:
если было хотя бы одно изменение за час;
если было 10 изменений за 30 минут;
если было 10000 изменений за 5 минут. Скопируйте данные конфигурационного файла, которые отвечают за эти настройки, в качестве ответа.
Увеличьте максимальное количество соединений до 65536 и максимально разрешенное количество клиентов до 10000, также установите политику хранения ключей на удаление наименее используемых ключей. Настройки приведите в качестве ответа.
Воспользуйтесь утилитой redis-benchmark и протестируйте вашу инсталляцию, имитируя 100 параллельных соединений (имитация количества клиентов). Протестировав 200000 запросов, данные выведите в quiet-формате. Также протестируйте задержку с помощью redis-cli. Команды и вывод приведите в качестве ответа.


*****************************************************************
Решение
*****************************************************************
Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
22.07.2022 22:55
1. Задание рекомендуется выполнять на чистой VM.
host: 158.160.1.137
2. Сконфигурируйте Redis на RDB метод бэкапа, с тем, чтобы он сохранял дамп:
save 3600 1
save 1800 10
save 300 10000

3. Увеличьте максимальное количество соединений до 65536 и максимально разрешенное количество клиентов до 10000, также установите политику хранения ключей на удаление наименее используемых ключей.
root@epdr5msq4htgb8shotkn:/home/yc-user# sysctl -w net.core.somaxconn=65535
net.core.somaxconn = 65535

vi /etc/redis/redis.conf

maxclients 10000
maxmemory-policy allkeys-lru 

4. Воспользуйтесь утилитой redis-benchmark и протестируйте вашу инсталляцию, имитируя 100 параллельных соединений (имитация количества клиентов). Протестировав 200000 запросов, данные выведите в quiet-формате. Также протестируйте задержку с помощью redis-cli. Команды и вывод приведите в качестве ответа.
root@epdr5msq4htgb8shotkn:/home/yc-user# redis-benchmark -c 100 -n 200000 -q
PING_INLINE: 7844.68 requests per second
PING_BULK: 8729.05 requests per second
SET: 8373.11 requests per second
GET: 7025.43 requests per second
INCR: 7099.50 requests per second
LPUSH: 6301.99 requests per second
RPUSH: 6677.13 requests per second
LPOP: 9064.54 requests per second
RPOP: 8969.41 requests per second
SADD: 8290.16 requests per second
HSET: 9497.58 requests per second
SPOP: 8566.04 requests per second
LPUSH (needed to benchmark LRANGE): 7299.54 requests per second
LRANGE_100 (first 100 elements): 5136.37 requests per second
LRANGE_300 (first 300 elements): 2158.03 requests per second
LRANGE_500 (first 450 elements): 1626.76 requests per second
LRANGE_600 (first 600 elements): 1440.26 requests per second
MSET (10 keys): 5545.23 requests per second

root@epdr5msq4htgb8shotkn:/home/yc-user# 


root@epdr5msq4htgb8shotkn:/home/yc-user# redis-cli --latency
min: 0, max: 43, avg: 0.55 (41075 samples)^C
root@epdr5msq4htgb8shotkn:/home/yc-user# 

ОТВЕТ КУРАТОРА
Алексей Кузнецов (@Hystrix)
ВЫПОЛНЕНО 4
23.07.2022 20:28
Добрый день!

Очень хорошо, одно замечание:

п.3. "Увеличьте максимальное количество соединений до 65536" - правильно изменили системные настройки, но также требуется опция и в конфигурационном файле Redis. Уточню, что речь скорее о "размере полной очереди подключения".
26.07.2022 06:45
ВЫПОЛНЕНО 5
Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
26.07.2022 06:45
Как я понял нужно повышать это значение: 
tcp-backlog 65536

Когда я читал там было и это значение 
cat /proc/sys/net/ipv4/tcp_max_syn_backlog 65536 
ОТВЕТ КУРАТОРА
Алексей Кузнецов (@Hystrix)
ВЫПОЛНЕНО 5
26.07.2022 10:06
Добрый день!

Все верно, подробнее в статье:

https://severalnines.com/blog/performance-tuning-redis/
# TCP listen() backlog.
# In high requests-per-second environments you need an high backlog in order
# make sure to raise both the value of somaxconn and tcp_max_syn_backlog
tcp-backlog 65536
Отличные знание темы и выполнение задания, замечаний и вопросов нет!
