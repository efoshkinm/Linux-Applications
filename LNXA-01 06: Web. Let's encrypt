Задание:
Сгенерируйте самоподписанный сертификат для домена test.linux.example.com при помощи утилиты openssl с использованием параметра -subj (сохраните команду и сертификат).
Установите certbot (сохраните команды для установки).
Получите сертификат для вашего доменного имени при помощи webroot через nginx, используя директорию /var/www/html как корень (сохраните команды запуска).
Настройте автоматическое обновление сертификата и применения его на стороне nginx при помощи hook (сохраните команды).
Дополните конфигурационный файл nginx на использование TLS.
Добавить правило для автоматичесого редиректа на HTTPS в default конфиге.
Предоставить команды, конфигурационные файлы nginx, сертификат (полученный в п.3 Задания) и ссылку на сайт.


*********************************************************************
Решение
*********************************************************************
Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
24.06.2022 09:51
Настройка сервера
[m.efoshkin@MiWiFi-R4A-srv ~]$ yc compute instance create     --name efoshkin-lnxa-01-06     --network-interface subnet-name=default-ru-central1-b,nat-ip-version=ipv4     --zone ru-central1-b     --ssh-key ~/.ssh/id_rsa.pub     --cores 2     --core-fraction 5     --preemptible     --create-boot-disk image-folder-id=standard-images,image-family=ubuntu-2004-lts     --labels user_email=maxefoshkin@gmail.com,task_name=lnxa-01-06
done (22s)
id: epd3g07c0e95n8ta2dn7
folder_id: b1gu2vqv4hil3okf70bb
created_at: "2022-06-23T05:40:44Z"
name: efoshkin-lnxa-01-06
labels:
  task_name: lnxa-01-06
  user_email: maxefoshkin@gmail.com
zone_id: ru-central1-b
platform_id: standard-v2
resources:
  memory: "2147483648"
  cores: "2"
  core_fraction: "5"
status: RUNNING
boot_disk:
  mode: READ_WRITE
  device_name: epd48gelob1p06ff57v7
  auto_delete: true
  disk_id: epd48gelob1p06ff57v7
network_interfaces:
- index: "0"
  mac_address: d0:0d:38:00:ec:03
  subnet_id: e2lebfr9cjkjg4ruk3gn
  primary_v4_address:
    address: 10.129.0.45
    one_to_one_nat:
      address: 84.201.179.161
      ip_version: IPV4
fqdn: epd3g07c0e95n8ta2dn7.auto.internal
scheduling_policy:
  preemptible: true
network_settings:
  type: STANDARD
placement_policy: {}

There is a new yc version '0.91.0' available. Current version: '0.90.0'.
See release notes at https://cloud.yandex.ru/docs/cli/release-notes
You can install it by running the following command in your shell:
	$ yc components update

Сгенерируйте самоподписанный сертификат для домена test.linux.example.com при помощи утилиты openssl с использованием параметра -subj (сохраните команду и сертификат).
root@epd3g07c0e95n8ta2dn7:/etc/nginx# openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt -subj "/C=RU/ST=Moscow/L=Moscow/O=Rebrainme/CN=test.linux.example.com"
Generating a RSA private key
..................................................................................................................+++++
..........+++++
writing new private key to 'privateKey.key'
-----
root@epd3g07c0e95n8ta2dn7:/etc/nginx# ll privateKey.key 
-rw------- 1 root root 1708 Jun 23 06:06 privateKey.key
root@epd3g07c0e95n8ta2dn7:/etc/nginx# vi privateKey.key 
root@epd3g07c0e95n8ta2dn7:/etc/nginx# ll certificate.crt 
-rw-r--r-- 1 root root 1330 Jun 23 06:06 certificate.crt
root@epd3g07c0e95n8ta2dn7:/etc/nginx# vi certificate.crt 
root@epd3g07c0e95n8ta2dn7:/etc/nginx# 



root@epd3g07c0e95n8ta2dn7:/etc/nginx# apt-get install certbot
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt# ll
total 12
drwxr-xr-x  2 root root 4096 Jun 23 06:11 ./
drwxr-xr-x 80 root root 4096 Jun 23 06:11 ../
-rw-r--r--  1 root root  121 Feb 11  2019 cli.ini
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt# pwd
/etc/letsencrypt
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt# 




Получите сертификат для вашего доменного имени при помощи webroot через nginx, используя директорию /var/www/html как корень (сохраните команды запуска).
root@epd3g07c0e95n8ta2dn7:/etc/nginx# certbot certonly  --webroot -w /var/www/html -d 84.201.179.161.nip.io -m m.efoshkin@yandex.ru
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator webroot, Installer None
Obtaining a new certificate
Performing the following challenges:
http-01 challenge for 84.201.179.161.nip.io
Using the webroot path /var/www/html for all unmatched domains.
Waiting for verification...
Cleaning up challenges
Running deploy-hook command: systemctl reload nginx

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/84.201.179.161.nip.io/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/84.201.179.161.nip.io/privkey.pem
   Your cert will expire on 2022-09-22. To obtain a new or tweaked
   version of this certificate in the future, simply run certbot
   again. To non-interactively renew *all* of your certificates, run
   "certbot renew"
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le

root@epd3g07c0e95n8ta2dn7:/etc/nginx# 



Настройте автоматическое обновление сертификата и применения его на стороне nginx при помощи hook (сохраните команды).
root@epd3g07c0e95n8ta2dn7# cat /etc/cron.d/certbot
0 */12 * * * root test -x /usr/bin/certbot -a \! -d /run/systemd/system && perl -e 'sleep int(rand(43200))' && certbot -q renew


root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt# cat cli.ini 
# Because we are using logrotate for greater flexibility, disable the
# internal certbot logrotation.
max-log-backups = 0
deploy-hook = systemctl reload nginx
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt# 


root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt/live/84.201.179.161.nip.io# certbot renew --dry-run
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/84.201.179.161.nip.io.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not due for renewal, but simulating renewal for dry run
Plugins selected: Authenticator webroot, Installer None
Renewing an existing certificate
Performing the following challenges:
http-01 challenge for 84.201.179.161.nip.io
Using the webroot path /var/www/html for all unmatched domains.
Waiting for verification...
Cleaning up challenges
Dry run: skipping deploy hook command: systemctl reload nginx

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
new certificate deployed without reload, fullchain is
/etc/letsencrypt/live/84.201.179.161.nip.io/fullchain.pem
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates below have not been saved.)

Congratulations, all renewals succeeded. The following certs have been renewed:
  /etc/letsencrypt/live/84.201.179.161.nip.io/fullchain.pem (success)
** DRY RUN: simulating 'certbot renew' close to cert expiry
**          (The test certificates above have not been saved.)
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

IMPORTANT NOTES:
 - Your account credentials have been saved in your Certbot
   configuration directory at /etc/letsencrypt. You should make a
   secure backup of this folder now. This configuration directory will
   also contain certificates and private keys obtained by Certbot so
   making regular backups of this folder is ideal.
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt/live/84.201.179.161.nip.io# 
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt/archive/84.201.179.161.nip.io# cat /etc/nginx/sites-enabled/nip 
log_format logz '$remote_addr [$time_local]'
                '"$request" $status';
								
server {
       listen 80;
       listen 443 ssl;
       server_name 84.201.179.161.nip.io;
       ssl_certificate  /etc/letsencrypt/archive/84.201.179.161.nip.io/cert1.pem;
       ssl_certificate_key  /etc/letsencrypt/archive/84.201.179.161.nip.io/privkey1.pem;
       ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
       ssl_ciphers         HIGH:!aNULL:!MD5;

       root /var/www/html;
       index index.nginx-debian.html;
      } 
     
root@epd3g07c0e95n8ta2dn7:/etc/letsencrypt/archive/84.201.179.161.nip.io# 


РАюотает! Ура!! Я первый раз настроил настоящий сертификат, это круто! Я рад, спасибо! 84.201.179.161.nip.io

ОТВЕТ КУРАТОРА
Oleg Avdeev (@oavdeev)
ВЫПОЛНЕНО 4
24.06.2022 20:27
Максим, здравствуйте! Хорошая работа, всего пара незначительных замечаний.

по п.4 требуется уточнение: скорее всего в вашей системе есть каталог /run/systemd/system, значит из этого кронтаба certbot не запустится. Как он запускается в таком случае ?
забыли реализовать: "Добавить правило для автоматичесого редиректа на HTTPS в default конфиге."
27.06.2022 14:59
ВЫПОЛНЕНО 5
Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
27.06.2022 14:59
Он запускается через systemd-timers
Я не забыл про редирект. Просто, когда я его ставил, он ругался что уже много редиректов. Почемуто nginx не запускался.
Вот, щас я заново подниму виртуалку.

[m.efoshkin@fedora ~]$ yc compute instance create     --name efoshkin-lnxa-01-06     --network-interface subnet-name=default-ru-central1-b,nat-ip-version=ipv4     --zone ru-central1-b     --ssh-key ~/.ssh/id_rsa.pub     --cores 2     --core-fraction 5     --preemptible     --create-boot-disk image-folder-id=standard-images,image-family=ubuntu-2004-lts     --labels user_email=maxefoshkin@gmail.com,task_name=lnxa-01-06
done (28s)
id: epdjgg6lrmo0tmcl6ih8
folder_id: b1gu2vqv4hil3okf70bb
created_at: "2022-06-27T10:59:21Z"
name: efoshkin-lnxa-01-06
labels:
  task_name: lnxa-01-06
  user_email: maxefoshkin@gmail.com
zone_id: ru-central1-b
platform_id: standard-v2
resources:
  memory: "2147483648"
  cores: "2"
  core_fraction: "5"
status: RUNNING
boot_disk:
  mode: READ_WRITE
  device_name: epdstil5q264tpk7i1n8
  auto_delete: true
  disk_id: epdstil5q264tpk7i1n8
network_interfaces:
- index: "0"
  mac_address: d0:0d:13:84:0d:5d
  subnet_id: e2lebfr9cjkjg4ruk3gn
  primary_v4_address:
    address: 10.129.0.29
    one_to_one_nat:
      address: 84.252.139.85
      ip_version: IPV4
fqdn: epdjgg6lrmo0tmcl6ih8.auto.internal
scheduling_policy:
  preemptible: true
network_settings:
  type: STANDARD
placement_policy: {}



apt-get install certbot
apt-get install nginx-full

# Генерация сертифифкатов
certbot certonly  --webroot -w /var/www/html -d 84.252.139.85.nip.io -m m.efoshkin@yandex.ru


Разобрался с редиректами
root@epdjgg6lrmo0tmcl6ih8:/etc/nginx/sites-enabled# cat nip 
log_format logz '$remote_addr [$time_local]'
                '"$request" $status';


server {
       listen 80;
       server_name    84.252.139.85.nip.io;

       return 301 https://84.252.139.85.nip.io$request_uri;

       }
								
server {
       listen 443 ssl;
       server_name 84.252.139.85.nip.io;
       ssl_certificate  /etc/letsencrypt/live/84.252.139.85.nip.io/fullchain.pem;
       ssl_certificate_key  /etc/letsencrypt/live/84.252.139.85.nip.io/privkey.pem;
       ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
       ssl_ciphers         HIGH:!aNULL:!MD5;

       root /var/www/html;
       index index.nginx-debian.html;
      } 



И регенерация сертификатов
root@epdjgg6lrmo0tmcl6ih8:/etc/letsencrypt# cat cli.ini 
# Because we are using logrotate for greater flexibility, disable the
# internal certbot logrotation.
max-log-backups = 0
deploy-hook = systemctl reload nginx
root@epdjgg6lrmo0tmcl6ih8:/etc/letsencrypt# 

root@epdjgg6lrmo0tmcl6ih8:/etc/letsencrypt# systemctl status certbot.timer
● certbot.timer - Run certbot twice daily
     Loaded: loaded (/lib/systemd/system/certbot.timer; enabled; vendor preset: enabled)
     Active: active (waiting) since Mon 2022-06-27 11:03:13 UTC; 51min ago
    Trigger: Mon 2022-06-27 17:35:21 UTC; 5h 40min left
   Triggers: ● certbot.service

Jun 27 11:03:13 epdjgg6lrmo0tmcl6ih8 systemd[1]: Started Run certbot twice daily.
root@epdjgg6lrmo0tmcl6ih8:/etc/letsencrypt# 

root@epdjgg6lrmo0tmcl6ih8:/etc/letsencrypt# systemctl cat certbot.timer
# /lib/systemd/system/certbot.timer
[Unit]
Description=Run certbot twice daily

[Timer]
OnCalendar=*-*-* 00,12:00:00
RandomizedDelaySec=43200
Persistent=true

[Install]
WantedBy=timers.target


Как я понял, он запускает certbot renew  два раза в день. И типа когда сертификат протухает он обновляется? 
А если он не протух, но получается он два раза запускает его в холостую?

Проверка 84.252.139.85.nip.io

ОТВЕТ КУРАТОРА
Oleg Avdeev (@oavdeev)
ВЫПОЛНЕНО 5
28.06.2022 12:56
Максим, здравствуйте! Отлично, считаю что с темой отлично разобрались, редирект работает.

Как я понял, он запускает certbot renew два раза в день. И типа когда сертификат протухает он обновляется? А если он не протух, но получается он два раза запускает его в холостую?

Не совсем так, цертбот не ждёт пока серитификат окончательно протухнет и выполнит обновление заранее, за 30 дней до истечения срока. Это делается специально, чтобы не допустить чтобы клиент попал на страницу с просроченным сертификатом даже если часть попыток обновления завершится неудачно. Когда сертификат валидный и до его истечения >30 дней, certbоt ничего не делает, можно сказать что холостой запуск.

