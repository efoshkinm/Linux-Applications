Задание:
Задание рекомендуется выполнять на чистой VM.
Произведите установку MariaDB 10.3.22
Убедитесь в том, что включена настройка InnoDB File-per-table. Приведите строку конфигурации в ответе.
Отключите поиск DNS-имени для адресов, с которых осуществляются подключения к БД. Приведите строку конфигурации в ответе.
Сконфигурируйте размер временных таблиц (tmp_tables) в 128М. Приведите строки конфигурации в ответе.
Включите запись медленных запросов (более 1 секунды) в файл /var/log/mysql/mysql-slow.log. Строки конфигурации приведите в ответе.
Установите значения wait и interactive timeouts в 60 секунд. Строки конфигурации приведите в ответе.
Установите значение max_connections в 200. Строку конфигурации приведите в ответе.
Установите значение query_cache_size в 256M. Строку конфигурации приведите в ответе.
Остальные настройки оставьте в default значении. Подсчитайте, какое количество памяти БД будет потреблять в пике, при исчерпании всех подключений. Предоставьте ответ на указанный вопрос и способ подсчета.


***************************************************************************
Решение
***************************************************************************
Ефошкин Максим Вячеславович
ОТПРАВЛЕНО
02.07.2022 10:25
one_to_one_nat:
      address: 51.250.103.226
      ip_version: IPV4
Установка mariadb
apt install mariadb-server-10.3
apt install mariadb-client

Убедитесь в том, что включена настройка InnoDB File-per-table. Приведите строку конфигурации в ответе.
 tail -n 1 my.cnf
innodb_file_per_table=1

Отключите поиск DNS-имени для адресов, с которых осуществляются подключения к БД. Приведите строку конфигурации в ответе.
root@epdhemtbdcm5c2qhg733:/etc/mysql# tail my.cnf -n1
skip-name-resolve=1
root@epdhemtbdcm5c2qhg733:/etc/mysql# 


Сконфигурируйте размер временных таблиц (tmp_tables) в 128М. Приведите строки конфигурации в ответе.
#Я не уверен что это правильное место для конфига, в интеренете указано только что это и как ставить, но не где. Даже на #официальном сайте не нашел.


root@epdhemtbdcm5c2qhg733:/etc/mysql# tail -n1 my.cnf
tmp_table_size=128M
root@epdhemtbdcm5c2qhg733:/etc/mysql#
Включите запись медленных запросов (более 1 секунды) в файл /var/log/mysql/mysql-slow.log. Строки конфигурации приведите в ответе.
vi /etc/mysql/my.cnf

slow_query_log=ON
long_query_time=1
slow_query_log_file=/var/log/mysql/mysql-slow.log


Установите значения wait и interactive timeouts в 60 секунд. Строки конфигурации приведите в ответе.
vi /etc/mysql/my.cnf

wait_timeout = 60
interactive_timeout = 60

Установите значение max_connections в 200. Строку конфигурации приведите в ответе.
vi /etc/mysql/my.cnf
max_connections = 200

Установите значение query_cache_size в 256M. Строку конфигурации приведите в ответе.
query_cache_size=256MB

В итоге я добавил в конфиг следущее:

vi /etc/mysql/my.cnf

[mariadb]
innodb_file_per_table=1
skip-name-resolve=1
tmp_table_size=128M
slow_query_log=1
long_query_time=1
slow_query_log_file=/var/log/mysql/mysql-slow.log
wait_timeout = 60
interactive_timeout = 60
max_connections = 200
query_cache_size=256MB

Остальные настройки оставьте в default значении. Подсчитайте, какое количество памяти БД будет потреблять в пике, при исчерпании всех подключений. Предоставьте ответ на указанный вопрос и способ подсчета.
В пике значит при максимальных connections = 200. и tmp_table_size определяет максимальный размер временной таблицы создаваемой для расчетов. Соответственно умножаем 200 на 128мегабайт.
200*128=25600 Мегабайт  или 25Гигабайт примерно.

ОТВЕТ КУРАТОРА
Алексей Кузнецов (@Hystrix)
ВЫПОЛНЕНО 5
02.07.2022 18:27
Добрый день!

Отличные знание темы и выполнение задания, замечаний и вопросов нет!



****************************************************************************
Теория
****************************************************************************
LNXA-02 01: Databases. MariaDB
Описание:
При развитии интернета в 2000-х годах большую популярность приобрела связка LAMP - Linux, apache, MySQL, PHP. Долгие годы этот стек был золотым стандартом в мире интернет-проектов, но, разумеется, все меняется. В 2004 в публичный релиз вышел Nginx, который за несколько лет потеснил Apache с пьедестала. В 2009, после того как MySQL выкупила компания Oracle, в противовес ее политике лицензирования появилась MariaDB. По сути - наследница MySQL, которую основали первоначальные разработчики исходного программного продукта. Разумеется, появились и иные варианты реляционных баз данных - PostgreSQL, MongoDB, Oracle (собственный продукт одноименной компании) и т.д. Популярность стали приобретать и иные языки, появилось логическое разделение на Frontend/Backend, на текущий день мы имеем весьма широкий возможный стек используемых технологий.

Знакомство с базами данных мы начнем с наследницы MySQL - MariaDB, которая уже была представлена в абзаце выше. Как уже было сказано, данная БД имеет реляционный тип - простым языком, она хранит данные в табличном виде. Основных типов таблиц 2 - MyISAM и InnoDB, фактически их, разумеется, больше, однако все они по большому счету являются либо вариациями 2-х указанных (как пример XtraDB), либо совсем специфическими решениями.

MyISAM - исторически базовый тип таблиц, по умолчанию являлся основным в версиях MySQL до 5.5. Данный тип по многим причинам (см. требования ACID) является устаревшим - архаичный метод хранения данных (одна таблица - один файл данных), невозможность использования постраничного кеша, недостаточная стабильность и иные проблемы стали стимулом для создания и развития иных типов таблиц, и, в частности, InnoDB - таблиц, полностью соответствующих требованиям ACID.

При администрировании БД мы настойчиво рекомендуем вам подробно ознакомиться с принципами работы и архитектурой необходимой вам реализации, так как от этих знаний зависит понимание процесса работы с базой, особенностей настроек (от этого зависит очень и очень многое!), особенностей построения схем, удовлетворяющих требованиям отказоустойчивости и безопасности, а также, разумеется, поиск и устранение неисправностей.

Полезные ссылки:
Принципы ACID
MariaDB Docs
Все видеозаписи и статьи Андрея Аксенова (возможно, будет трудно, но полезно)

